[tool.poetry]
name = "dev-setup"
version = "1.2.0"
description = "My own Ansible collection for development setup."
authors = ["Federico Jaureguialzo <fedejaure@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/fedejaure/dev-setup"
repository = "https://github.com/fedejaure/dev-setup"
documentation = "https://dev-setup.readthedocs.io"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/fedejaure/dev-setup/issues"

[tool.poetry.dependencies]
python = "<3.11,>=3.10"
ansible = "^9.2.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.2"
invoke = "^2.2.0"
bump2version = "^1.0.1"

[tool.poetry.group.test.dependencies]
molecule = "^24.2.0"
molecule-plugins = {extras = ["docker"], version = "^23.5.3"}

[tool.poetry.group.lint.dependencies]
isort = "^5.13.2"
black = "^24.2.0"
ruff = "^0.2.1"
yamllint = "^1.35.1"
ansible-lint = {version = "^6.22.1", markers = "platform_system != 'Windows'"}

[tool.poetry.group.security.dependencies]
safety = "^3.0.1"

[tool.poetry.group.typing.dependencies]
mypy = "^1.8.0"

[tool.ruff]
target-version = "py311"
show-source = true
line-length = 99
fix = true
unfixable = [
  "ERA",  # Don't remove commented-out code
]
extend-exclude = [
    "docs/*",
]
select = [
  "E", "F", "W",  # flake8
  "C",  # mccabe
  "I",  # isort
  "N",  # pep8-naming
  "D",  # flake8-docstrings
  "ANN",  # flake8-annotations
  "S",  # flake8-bandit
  "BLE",  # flake8-blind-except
  "B",  # flake8-bugbear
  "A",  # flake8-builtins
  "G",  # flake8-logging-format
  "ERA",  # eradicate
  "ISC",  # flake8-implicit-str-concat
  "RUF",  # Ruff-specific rules
]
ignore = ["ANN101", "D203", "D213"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
".jupyter/jupyter_lab_config.py" = ["E501", "ERA001"]
"src/deeptune/utils.py" = ["ANN401"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = ["invoke", "nox"]

[tool.black]
line-length = 99
target-version = ["py310"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["invoke.*"]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true
warn_no_return = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
